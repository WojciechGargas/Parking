// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parking.Entities;

#nullable disable

namespace Parking.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250710091355_AdjustDatebase")]
    partial class AdjustDatebase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Parking.Entities.ParkingSpot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Empty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("Floor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("ParkingLot");
                });

            modelBuilder.Entity("Parking.Entities.ParkingSpot", b =>
                {
                    b.OwnsOne("Parking.Entities.ParkingSpotSize", "Size", b1 =>
                        {
                            b1.Property<int>("ParkingSpotId")
                                .HasColumnType("int");

                            b1.Property<double>("Length")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValue(5.0);

                            b1.Property<double>("MaxVehicleHeight")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValue(2.2000000000000002);

                            b1.Property<double>("Width")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValue(3.0);

                            b1.HasKey("ParkingSpotId");

                            b1.ToTable("ParkingLot");

                            b1.WithOwner()
                                .HasForeignKey("ParkingSpotId");
                        });

                    b.Navigation("Size")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
